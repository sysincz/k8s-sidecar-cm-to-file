apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-rules
  labels:
    findme: "yea"
data:
  alertmanager.yaml.part0.00global: |
    global:
        # The smarthost and SMTP sender used for mail notifications.
        smtp_smarthost: 'localhost:25'
        smtp_from: 'alertmanager@example.org'
        smtp_auth_username: 'alertmanager'
        smtp_auth_password: 'password'
        # The auth token for Hipchat.
        hipchat_auth_token: '1234556789'
        # Alternative host for Hipchat.
        hipchat_api_url: 'https://hipchat.foobar.org/'

    # The directory from which notification templates are read.
    templates: 
    - '/etc/alertmanager/template/*.tmpl'
  
  alertmanager.yaml.part1.00route-global: |
    # The root route on which each incoming alert enters.
    route:
      # The labels by which incoming alerts are grouped together. For example,
      # multiple alerts coming in for cluster=A and alertname=LatencyHigh would
      # be batched into a single group.
      group_by: ['alertname', 'cluster', 'service']

      # When a new group of alerts is created by an incoming alert, wait at
      # least 'group_wait' to send the initial notification.
      # This way ensures that you get multiple alerts for the same group that start
      # firing shortly after another are batched together on the first 
      # notification.
      group_wait: 30s

      # When the first notification was sent, wait 'group_interval' to send a batch
      # of new alerts that started firing for that group.
      group_interval: 5m

      # If an alert has successfully been sent, wait 'repeat_interval' to
      # resend them.
      repeat_interval: 3h 

      # A default receiver
      receiver: team-X-mails

      # All the above attributes are inherited by all child routes and can 
      # overwritten on each.

      # The child route trees.
      routes:
      # This routes performs a regular expression match on alert labels to
      # catch alerts that are related to a list of services.

## alertmanager-route = alertmanager.yaml.part1.01routes  # SIDECAR COMMENT
  alertmanager-route: |
   #from alertmanager-route with indent from DATA_INDENT_ROUTE # SIDECAR COMMENT
   - match:
      alertname: "DeadMansSwitchA"
     receiver: null       
    
  alertmanager.yaml.part1.01routes.test2: |
    # <--  (hash) have to be set for set space # SIDECAR COMMENT
    ##
      - match:
         alertname: "DeadMansSwitchB"
        receiver: null       
             
  alertmanager.yaml.part2.00inhibit_rules-global: |

    # Inhibition rules allow to mute a set of alerts given that another alert is
    # firing.
    # We use this to mute any warning-level notifications if the same alert is 
    # already critical.
    inhibit_rules:
    - source_match:
        severity: 'critical'
      target_match:
        severity: 'warning'
      # Apply inhibition if the alertname is the same.
      equal: ['alertname', 'cluster', 'service']


  alertmanager.yaml.part5.00receivers-global: |
    receivers:

  alertmanager-receivers: |
    #Team Kubernetes 
    - name: 'KubeAlertsPrometheusCritical'
      webhook_configs:
      - url: 'http://prometheus-msteams:2000/KubeAlertsPrometheusCritical'

  alertmanager.yaml.part5.01receivers-team-monitoring: |
    #Team Kubernetes
    - name: 'KubeAlertsPrometheus'
      webhook_configs:
      - url: 'http://prometheus-msteams:2000/KubeAlertsPrometheus'