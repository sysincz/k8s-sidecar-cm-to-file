apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: sample-deployment
  labels:
    app: sample
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sample
  template:
    metadata:
        labels:
          app: sample
    spec:
      serviceAccountName: sample-acc
      containers:
      - name: bashls
        image: bash:4.4.19
        volumeMounts:
        - name: shared-volume
          mountPath: /tmp/sidecar_mount/
        command: ["watch"]
        args: ["ls /tmp/sidecar_mount/* ; sleep 5"]
        resources:
          limits:
            cpu: 20m
            memory: 20Mi
      - name: bashcat
        image: bash:4.4.19
        volumeMounts:
        - name: shared-volume
          mountPath: /tmp/sidecar_mount/
        command: ["watch"]
        args: ["cat /tmp/sidecar_mount/alertmanager.yaml ; sleep 5"]
        resources:
          limits:
            cpu: 20m
            memory: 20Mi
      - name: sidecar
        image: sysincz/k8s-sidecar-cm-to-file:test_stream
        volumeMounts:
        - name: shared-volume
          mountPath: /tmp/sidecar_mount/
        env:
        - name: LABEL
          value: "findme"
        - name: FOLDER
          value: /tmp/sidecar_mount/
      
        - name: PARTFILES
          value: "True"
        - name: COMMENT
          value: "True"
      #ROUTE maping    
        - name: DATA_NAME_ROUTE
          value: "alertmanager-route"
        - name: DATA_INDENT_ROUTE
          value: "2"
        - name: DATA_FILE_ROUTE
          value: "alertmanager.yaml.part1.01routes"
      #RECEIVERS maping
        - name: DATA_NAME_RECEIVERS
          value: "alertmanager-receivers"
        - name: DATA_INDENT_RECEIVERS
          value: "0"
        - name: DATA_FILE_RECEIVERS
          value: "alertmanager.yaml.part6.08receivers"
      #check config amtool
        - name: CHECK_CONFIG_COMMAND
          value: "./amtool check-config /tmp/k8s_sidecar-cm-to-file/alertmanager.yaml"
        - name: OK_EXIT_CODES
          value: "0,127"
      #command after check config (create Secret for alert-manager)
        - name: COMMAND_AFTER_CC
          value: "python ./files_to_cm.py --name=alertmanager-main --dir /tmp/k8s_sidecar-cm-to-file/ --file_pattern '.*.yaml'"
        resources:
          limits:
            cpu: 50m
            memory: 100Mi
      volumes:
      - name: shared-volume
        emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sample-configmap
  labels:
    findme: "yea"
data:
  hello.world: |-
     Hello World!
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sample-role
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "watch", "list","create","update"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sample-acc
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: sample-rolebind
roleRef:
  kind: ClusterRole
  name: sample-role
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: sample-acc
  namespace: default
